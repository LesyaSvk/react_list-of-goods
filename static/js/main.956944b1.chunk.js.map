{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","visibleGoods","goods","sort","f1","f2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,4CAOE,WAAU,IAAD,OACDC,EAzCV,SACEC,EACAH,EACAD,GAEA,IAAMG,EAAY,YAAOC,GAezB,OAbAD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQN,GACN,KAAKN,EAASa,QACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKZ,EAASe,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITX,EACKG,EAAaS,UAGfT,EAiBgBU,CACnBjB,EACAkB,KAAKhB,MAAMG,SACXa,KAAKhB,MAAME,YAGb,OACE,sBAAKe,UAAU,MAAf,WACID,KAAKhB,MAAMC,WAEX,wBACEiB,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAAApB,GAAK,MAAK,CAAEC,WAAYD,EAAMC,eAHhD,mBASDe,KAAKhB,MAAMC,WAEV,gCACE,wBACEiB,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUN,EAASa,WAHvC,iCASA,wBACEQ,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUN,EAASe,UAHvC,4BASA,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAAApB,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAJzB,qBAWA,wBACEgB,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CACZlB,YAAY,EACZC,SAAUN,EAASO,QALzB,mBAYA,oBAAIa,UAAU,QAAd,SACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAIL,UAAU,cAAd,SACGK,GAD8BA,kBAzEjD,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.956944b1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((f1, f2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return f1.localeCompare(f2);\n\n      case SortType.LENGTH:\n        return f1.length - f2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      this.state.sortType,\n      this.state.isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {!this.state.isStarted\n        && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState(state => ({ isStarted: !state.isStarted }));\n            }}\n          >\n            Start\n          </button>\n        )}\n        {this.state.isStarted\n        && (\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ sortType: SortType.ALPABET });\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ sortType: SortType.LENGTH });\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState(state => ({\n                  isReversed: !state.isReversed,\n                }));\n              }}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                });\n              }}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li className=\"Goods__item\" key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}